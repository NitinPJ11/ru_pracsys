<launch>
	<arg name="robot_ip" default="172.16.71.101" />
	<arg name="use_bswap" default="true" />
	<arg name="version0" default="false" />

    <rosparam>
    controller_joint_names: [arm_left_joint_1_s,arm_left_joint_2_l,arm_left_joint_3_e,arm_left_joint_4_u,arm_left_joint_5_r,arm_left_joint_6_b,arm_left_joint_7_t,arm_right_joint_1_s,arm_right_joint_2_l,arm_right_joint_3_e,arm_right_joint_4_u,arm_right_joint_5_r,arm_right_joint_6_b,arm_right_joint_7_t,torso_joint_b1,torso_joint_b2]
    </rosparam>
	<node name="robotiq_sim" pkg="prx_simulation" type="robotiq_sim.py" output="screen" />
	<!--
	<node name="unigripper_joint_trajectory_action" pkg="prx_simulation" type="unigripper_sim.py" output="screen" />
	-->
	<node name="unigripper_joint_trajectory_action" pkg="prx_motion_planning3" type="unigripper_driver.py" output="screen" />

	<rosparam command="load" file="$(find motoman_sda10f_support)/config/sda10f_state_interface.yaml" />
	<rosparam command="load" file="$(find motoman_sda10f_support)/config/joint_names_sda10f.yaml" />
 	<param name="robot_description" command="$(find xacro)/xacro.py '$(find motoman_sda10f_support)/urdf/sda10f_complete_kinect_macro.xacro'"/>
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
	<include file="$(find motoman_driver)/launch/robot_interface_streaming.launch">
		<arg name="robot_ip"   value="$(arg robot_ip)" />
		<arg name="use_bswap"  value="$(arg use_bswap)" />
		<arg name="version0"  value="$(arg version0)" />
	</include>
</launch>
