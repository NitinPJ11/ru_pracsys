<launch>

<!--       WORLD MODEL        -->          <!--       WORLD MODEL        -->       <!--       WORLD MODEL        -->


  <rosparam ns="world_model/planning_contexts">
    manipulator_pc:
     default:
      type: "hide_mapping"
  </rosparam>

<!--
    object_pc:
     default:
      type: "hide_mapping"
    manip_object_pc:
     default:
      type: "hide_mapping"
    real_world_pc:
     default:
      type: "obstacle_mapping"
    grasp_planning_pc:
     default:
      type: "obstacle_mapping"
-->

  <rosparam command="load" ns="world_model" file="$(find manipulation)/input/simulation/manipulation_simulator.yaml"/> 

  <rosparam command="load" ns="world_model/simulator/subsystems/manipulator" file="$(find baxter)/input/urdf/baxter.yaml"/>
  <rosparam command="load" ns="world_model/simulator/obstacles" file="$(find baxter)/input/simulation/baxter_torso.yaml" /> 

  <rosparam ns="world_model/simulator/">
    simulation_step: 0.02
    manipulator_name: simulator/manipulator
    imaginary_object: simulator/cup_a
  </rosparam>

<!--
  <rosparam command="load" ns="world_model/simulator/subsystems/cup_a" file="$(find manipulation)/input/simulation/plants/cups.yaml"/> 
  < rosparam command="load" ns="world_model/simulator/subsystems/cup_b" file="$(find manipulation)/input/simulation/plants/cups.yaml"/> 
-->

  <rosparam ns="world_model/simulator/subsystems/manipulator">
    planning_contexts:
      manipulator_pc:
        type: "full_mapping"

  </rosparam>

<!--

      manip_object_pc:
        type: "full_mapping"   
      real_world_pc:
        type: "full_mapping" 
      grasp_planning_pc:
        type: "full_mapping"

  <rosparam ns="world_model/simulator/subsystems/cup_a">
    planning_contexts:
      object_pc:
        type: "full_mapping"
      manip_object_pc:
        type: "full_mapping"
      manip_active_object_pc:
        type: "obstacle_mapping"
      real_world_pc:
        type: "hide_mapping"
      grasp_planning_pc:
        type: "full_mapping"
  </rosparam>
  -->
  <!--       PLANNING        -->          <!--       PLANNING        -->       <!--       PLANNING        -->

  <rosparam command="load" ns="" file="$(find prx_input)/templates/planning_applications/single_query_application.yaml"/>
  
  <!--rosparam command="load" ns="" file="$(find manipulation)/input/planning/manipulation_application.yaml"/-->

  <rosparam ns="">
    simulate: true 
    visualize: true 
    persistent: true
    consumer_mapping:
      - 
        pair: [simulator/consumer, manipulator_pc]
  </rosparam> 

  <include file="$(find manipulation)/input/planning/problems/common_problem.launch"/>

  rosparam command="load" ns="motion_planner/" file="$(find prx_input)/templates/motion_planners/prm_star.yaml"/>

  <rosparam ns="spec_template">
    type: motion_planning_specification
    distance_metric:
      type: ann_distance_metric
    stopping_criteria:
      elements:
        criterion1:
          type: iteration_criterion
          condition: 100
  </rosparam>

  <rosparam ns="graph_query_template">
    type: motion_planning_query
    query_type: add_query_points_collisions
    query_collision_type: active_collisions_reporpagate_edges
    goal:
        type: goal_state
        distance_metric:
          type: ann_distance_metric
  </rosparam>

  <rosparam ns="task_planner/" >
    type: manipulation_tp
    pc_name_manipulator_only: manipulator_pc
    pc_name_object_only: object_pc
    pc_name_manipulator_with_object: manip_object_pc
    pc_name_manipulator_with_active_object: manip_active_object_pc
    pc_name_transit_planning: transit_planning_pc
    pc_name_transfer_planning: transfer_planning_pc
    manipulator_path: simulator/manipulator
    visualization_body: "simulator/manipulator/end_effector"
    stable_pose_space:
      min: [-0.455, 0.95]
      max: [0.455, 1.17]
      scale: [0.5, 0.5]    
    manip_sampler:
      type: manip_sampler
      min_theta: 0
      max_theta: 0.5
      max_tries: 20
      grasp_z: 0.03
    ungrasped_name: ungrasped
    grasped_name: grasped
    graph_specifications:
      ungrasped:
        template: spec_template      
      grasped:
        template: spec_template
        sampler:
          type: manip_sampler
          min_theta: 0
          max_theta: 0.5
          max_tries: 20
          grasp_z: 0.03
          sampling_space:
            min: [-2, -2, 0]
            max: [2, 2.18, 6]
            scale: [0.3, 0.3, 0.4]
    face_queries:
      reach_face:
        template: graph_query_template
      transfer_face:
        template: graph_query_template
      retract_face:
        template: graph_query_template
  </rosparam>  

  <rosparam ns="task_planner/planners/" >
    ungrasped:
      template: "motion_planner"
      space_name: "manipulator_pc"
      visualization_bodies: ["simulator/manipulator/end_effector"]
      visualize_graph: false
      visualize_solutions: false        
      delta_prm: false
    grasped:
      template: "motion_planner"
      space_name: "manip_object_pc"
      visualization_bodies: ["simulator/manipulator/end_effector"]
      visualize_graph: false
      visualize_solutions: false        
      delta_prm: false    
  </rosparam>

  

</launch> 
